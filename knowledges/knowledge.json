{
    "تحليل البيانات": {
        "شرح": "تحليل البيانات هو عملية استخراج معلومات ومعرفة من البيانات الخام.\nالهدف منها هو اتخاذ قرارات مبنية على البيانات.",
        "المكتبات": ["pandas", "numpy", "matplotlib", "seaborn"]
    },
    "pandas": {
        "شرح": "مكتبة <code>pandas</code> تُستخدم لتحليل البيانات في بايثون.\nتسمح لك بالعمل على الجداول والبيانات في شكل <code>DataFrame</code> بطريقة سهلة وفعالة.",
        "الدوال": ["read", "head", "tail", "describe", "info", "value_counts", "isnull", "dropna", "fillna", "groupby", "sort_values", "loc", "iloc", "apply", "drop"]
    },
    "numpy": {
        "شرح": "مكتبة <code>numpy</code> تُستخدم للعمليات العددية والمصفوفات.\nوهي أساس قوي للمعالجة الرقمية في بايثون.",
        "الدوال": ["array", "mean", "median", "std", "reshape"]
    },
    "matplotlib": {
        "شرح": "مكتبة <code>matplotlib</code> تُستخدم لرسم المخططات البيانية.\nتتيح لك إنشاء رسوم بيانية من نوع أعمدة، خطوط، نقاط وغيرها.",
        "الدوال": ["plot", "bar", "hist", "scatter", "show"]
    },
    "seaborn": {
        "شرح": "مكتبة <code>seaborn</code> مبنية على <code>matplotlib</code>.\nتُستخدم لإنشاء رسوم بيانية إحصائية جميلة ومتقدمة بسهولة.",
        "الدوال": ["heatmap", "boxplot", "countplot", "pairplot"]
    },
    "read": {
        "شرح": "تُستخدم دوال القراءة في <code>pandas</code> لتحميل البيانات من مصادر مختلفة.\nبعد التحميل، يتم تخزينها في هيكل يُسمى <code>DataFrame</code> ليتم تحليلها.",
        "مثال": "import pandas as pd\n\n# CSV\ndf1 = pd.read_csv('data.csv')\n\n# Excel\ndf2 = pd.read_excel('data.xlsx')\n\n# JSON\ndf3 = pd.read_json('data.json')\n\n# Google Sheets\nsheet_url = 'https://docs.google.com/spreadsheets/d/1abc123xyz/export?format=csv'\ndf4 = pd.read_csv(sheet_url)\n\n# من الإنترنت\nurl = 'https://example.com/data.csv'\ndf5 = pd.read_csv(url)"
    },
    "head": {
        "شرح": "تعرض أول 5 صفوف من البيانات بشكل افتراضي.\nتُستخدم لمعاينة بداية البيانات.",
        "مثال": "df.head()"
    },
    "tail": {
        "شرح": "تعرض آخر 5 صفوف من البيانات.\nمفيدة لمراجعة نهاية البيانات.",
        "مثال": "df.tail()"
    },
    "describe": {
        "شرح": "تُستخدم لعرض ملخص إحصائي للأعمدة الرقمية.\nتشمل المتوسط، الانحراف المعياري، القيم القصوى والدنيا.",
        "مثال": "df.describe()"
    },
    "info": {
        "شرح": "تعرض معلومات عامة عن <code>DataFrame</code>.\nتشمل أسماء الأعمدة، أنواع البيانات، وعدد القيم غير الفارغة.",
        "مثال": "df.info()"
    },
    "value_counts": {
        "شرح": "تُستخدم لحساب عدد تكرار كل قيمة في عمود محدد.\nمثالية لتحليل التوزيع الفئوي.",
        "مثال": "df['col'].value_counts()"
    },
    "isnull": {
        "شرح": "تُستخدم للكشف عن القيم الفارغة في DataFrame أو Series.\nتعيد قيمة Boolean تشير إلى مكان القيم الفارغة.",
        "مثال": "df.isnull()"
    },
    "dropna": {
        "شرح": "تُستخدم لحذف الصفوف أو الأعمدة التي تحتوي على قيم فارغة.\nيمكنك تحديد axis و threshold وغيرها.",
        "مثال": "df.dropna()"
    },
    "fillna": {
        "شرح": "تُستخدم لملء القيم الفارغة بقيمة معينة أو باستخدام إستراتيجية معينة.\nمثل التكرار أو المتوسط.",
        "مثال": "df.fillna(0)"
    },
    "groupby": {
        "شرح": "تُستخدم لتجميع البيانات بناءً على عمود أو أكثر، ثم تطبيق دالة تجميعية.\nمثالية للتحليل حسب الفئات.",
        "مثال": "df.groupby('category').mean()"
    },
    "sort_values": {
        "شرح": "تُستخدم لترتيب البيانات تصاعديًا أو تنازليًا حسب عمود معين.",
        "مثال": "df.sort_values(by='age')"
    },
    "loc": {
        "شرح": "تُستخدم للوصول إلى الصفوف أو الأعمدة بناءً على التسمية (label-based indexing).",
        "مثال": "df.loc[0, 'name']"
    },
    "iloc": {
    "شرح": "تُستخدم للوصول إلى الصفوف أو الأعمدة بناءً على الفهرسة الرقمية (index-based).",
    "مثال": "df.iloc[0, 1]"
    },
    "apply": {
        "شرح": "تُستخدم لتطبيق دالة مخصصة على كل صف أو عمود.\nمفيدة لتحويل البيانات أو إجراء عمليات مخصصة.",
        "مثال": "df['col'].apply(lambda x: x * 2)"
    },
    "drop": {
        "شرح": "تُستخدم لحذف أعمدة أو صفوف من DataFrame.\nيمكن تحديد axis والقيم المراد حذفها.",
        "مثال": "df.drop('column_name', axis=1)"
    },
    "array": {
    "شرح": "تُستخدم لإنشاء مصفوفة (array) من قائمة أو مجموعة بيانات.\nالمصفوفة هي بنية بيانات أساسية في numpy.",
    "مثال": "import numpy as np\narr = np.array([1, 2, 3, 4])"
    },
    "mean": {
    "شرح": "تحسب المتوسط الحسابي لقيم المصفوفة.",
    "مثال": "np.mean(arr)"
    },
    "median": {
    "شرح": "تحسب القيمة الوسيطة للمصفوفة.",
    "مثال": "np.median(arr)"
    },
    "std": {
    "شرح": "تحسب الانحراف المعياري لقيم المصفوفة.",
    "مثال": "np.std(arr)"
    },
    "reshape": {
    "شرح": "تُستخدم لتغيير شكل المصفوفة بدون تغيير بياناتها.",
    "مثال": "arr.reshape(2, 2)"
    },
    "plot": {
    "شرح": "تُستخدم لرسم مخطط خطي بسيط.\nيُستخدم لمقارنة القيم مع الزمن أو الترتيب.",
    "مثال": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [4, 5, 6])\nplt.show()"
    },
    "bar": {
    "شرح": "تُستخدم لرسم مخطط أعمدة للمقارنة بين الفئات.",
    "مثال": "plt.bar(['A', 'B', 'C'], [10, 20, 15])\nplt.show()"
    },
    "hist": {
    "شرح": "تُستخدم لرسم الهستوغرام (توزيع التكرار).",
    "مثال": "plt.hist([1, 2, 2, 3, 3, 3, 4])\nplt.show()"
    },
    "scatter": {
    "شرح": "تُستخدم لرسم مخطط نقطي (Scatter plot) لمقارنة متغيرين.",
    "مثال": "plt.scatter([1, 2, 3], [4, 5, 6])\nplt.show()"
    },
    "show": {
    "شرح": "تُستخدم لعرض الرسم البياني بعد الإنشاء.",
    "مثال": "plt.show()"
    },
    "heatmap": {
    "شرح": "تُستخدم لرسم خريطة حرارية تُظهر العلاقات بين القيم في جدول.",
    "مثال": "import seaborn as sns\nimport numpy as np\ndata = np.random.rand(4,4)\nsns.heatmap(data)\nplt.show()"
    },
    "boxplot": {
    "شرح": "تُستخدم لرسم مخطط الصندوق الذي يُظهر التوزيع والانحرافات.",
    "مثال": "sns.boxplot(data=[7, 15, 13, 21, 23, 23, 29])\nplt.show()"
    },
    "countplot": {
    "شرح": "تُستخدم لعرض عدد القيم في كل فئة.",
    "مثال": "sns.countplot(x=['A', 'B', 'A', 'C', 'B', 'A'])\nplt.show()"
    },
    "pairplot": {
    "شرح": "تُستخدم لرسم علاقات متعددة بين أعمدة DataFrame.",
    "مثال": "import seaborn as sns\ndf = sns.load_dataset('iris')\nsns.pairplot(df, hue='species')\nplt.show()"
    }
}
